{"version":3,"sources":["images/yoda.png","images/darth-vader.png","components/ControlForm/ControlForm.js","components/Card/Card.js","components/CardContainer/CardContainer.js","components/Landing/Landing.js","components/Loading/Loading.js","components/api/api.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ControlForm","_ref","getData","activeButton","favoritesCount","showFavorites","react_default","a","createElement","id","map","label","onClick","event","target","key","toLowerCase","className","defaultProps","Card","displayCard","card","favorites","toggleFavorite","type","homeworld","species","population","name","parseInt","toLocaleString","terrain","climate","residentsList","residents","reduce","acc","resident","i","length","getResidentsList","model","vehicle_class","passengers","parentElement","includes","CardContainer","cards","currentPage","show10","toggleShownCards","cardsToDisplay","slice","splice","src","require","alt","components_Card_Card","disabled","Landing","text","title","date","Loading","api","fetchData","Object","asyncToGenerator","regenerator_default","mark","_callee","url","response","wrap","_context","prev","next","fetch","sent","abrupt","json","t0","Error","concat","message","stop","this","_x","apply","arguments","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","state","item","results","allData","finalData","allCards","findIndex","t1","API","getNextPageData","t2","getPeopleData","getPlanetData","getVehicleData","console","log","toConsumableArray","_ref2","_callee2","prevResults","allResults","_context2","_x2","_ref3","_callee4","data","unresolvedPromises","_context4","_ref4","_callee3","person","_context3","getHomeworld","getSpecies","_x4","Promise","all","_x3","_ref5","_callee6","_context6","_ref6","_callee5","planet","_context5","getResidents","_x6","_x5","_ref7","_callee8","_context8","_ref8","_callee7","vehicle","_context7","_x8","_x7","_ref9","_callee9","result","_context9","_x9","_ref10","_callee10","_context10","_x10","_ref11","_callee12","urls","_context12","_ref12","_callee11","_context11","_x12","_x11","newFavorites","filter","favorite","localStorage","setItem","JSON","stringify","_callee13","_context13","componentDidMount","_callee14","filmId","opening_crawl","release_date","_context14","hasOwnProperty","parse","getItem","Math","floor","random","scrollText","contentToDisplay","_this$state","components_Landing_Landing","components_Loading_Loading","components_CardContainer_CardContainer","components_ControlForm_ControlForm","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e1548ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/yoda.6d3b9a29.png\";","module.exports = __webpack_public_path__ + \"static/media/darth-vader.9fd74298.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ControlForm = ({ getData, activeButton, favoritesCount, showFavorites }) => {\n  const buttonLabels = ['People', 'Planets', 'Vehicles'];\n  return (\n    <div id='button-container'>\n    {\n      buttonLabels.map(label => {\n        return (\n          <button \n            onClick={(event) => getData(event.target.id)}\n            key={label}\n            id={label.toLowerCase()}\n            className= {\n              activeButton === label.toLowerCase() ? 'control-button active' : 'control-button inactive'\n            }\n          >{label}</button>\n        )\n      })\n    }\n      <button \n        onClick={(event) => showFavorites(event.target.id)}\n      id='favorites'\n        className={activeButton === 'favorites' ? 'control-button active' : 'control-button inactive'}\n      >\n        View {favoritesCount} Favorites\n      </button>\n    </div>\n  );\n}\n\nControlForm.propTypes = {\n  activeButton: PropTypes.string,\n  getData: PropTypes.func,\n  favoritesCount: PropTypes.number\n}\n\nControlForm.defaultProps = {\n  activeButton: 'DEFAULT',\n  getData: 'NO FUNCTION PASSED',\n  favoritesCount: 0\n}\n\nexport default ControlForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Card = ({ card, favorites, toggleFavorite }) => {\n  const getResidentsList = (residents) => {\n    if (typeof residents === 'string') {\n      return residents\n    } else {\n      return residents.reduce((acc, resident, i) => {\n        acc = (i === residents.length - 1) ? acc + resident : acc + resident + ', ';\n        return acc\n      }, '');\n    }\n  }\n  \n  let displayCard;\n  switch (card.type) {\n    case 'people':\n      const { homeworld, species, population } = card;\n      displayCard = \n        <div className='card-text-div'>\n          <h3>{card.name}</h3>\n          <p>Home World: {homeworld}</p>\n          <p>Species: {species}</p>\n          <p>Population of Home World: { parseInt(population) ? parseInt(population).toLocaleString() : population }\n          </p>\n        </div>\n      break;\n    case 'planets':\n      const { terrain, climate, residents } = card;\n      let residentsList = getResidentsList(residents);\n      displayCard = \n        <div className='card-text-div'>\n          <h3>{card.name}</h3>\n          <p>Terrain: {terrain}</p>\n          <p>Climate: {climate}</p>\n          <p>Residents: {residentsList}</p>\n        </div>\n      break;\n    case 'vehicles':\n      const { model, vehicle_class, passengers } = card;\n      displayCard = \n        <div className='card-text-div'>\n          <h3>{card.name}</h3>\n          <p>Model: {model}</p>\n          <p>Class: {vehicle_class}</p>\n          <p>Passenger Capacity: {parseInt(passengers).toLocaleString()}</p>\n        </div>\n      break;\n    default:\n      displayCard = 'Error: card case not valid';\n  }\n\n  return (\n    <div className='card' id={card.id}>\n      <button \n        onClick={(event) => toggleFavorite(event.target.parentElement.id)}\n        className= \n        {\n          favorites.includes(card.id) ? 'favorite-icon favorite' : 'favorite-icon'\n        }\n      ></button>\n      {displayCard}\n    </div>\n  )\n}\n\nCard.propTypes = {\n  card: PropTypes.object\n}\n\nCard.defaultProps = {\n  card: {}\n}\n\nexport default Card;","import React from 'react';\nimport Card from '../Card/Card';\nimport PropTypes from 'prop-types';\n\nconst CardContainer = ({cards, favorites, toggleFavorite, currentPage, show10, toggleShownCards}) => {\n  const cardsToDisplay = show10 === true ? cards.slice().splice(0, 10) : cards;\n\n  if (currentPage === 'favorites' && favorites.length === 0) {\n    return (\n      <div className='no-cards-container'>\n        <img className='star-wars-images' src={require('../../images/yoda.png')} alt='yoda' />\n        <h3 className='no-cards-text'>Any favorites right now you have not.</h3>\n      </div>\n    )\n  } else {\n    return (\n      <div id='card-container'>\n        {\n          cardsToDisplay.map(card => {\n            return(\n              <Card\n                card={card}\n                toggleFavorite={toggleFavorite}\n                favorites={favorites}\n                key={card.id}\n              />\n            )\n          })\n        }\n        <div id='show-button-div'>\n          <button id='show-button' onClick={() => toggleShownCards()} disabled={cards.length <= 10 ? true : false}>\n            {show10 === true ? 'Show More' : 'Show Less'}\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nCardContainer.propTypes = {\n  cards: PropTypes.array\n}\n\nCardContainer.defaultProps = {\n  cards: []\n}\n\nexport default CardContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Landing = ({ text, title, date }) => {\n\n  return (\n    <div id='landing-container'>\n      <div id='scroll-text-container'>\n        <h3 className='landing-text'>{text}</h3>\n        <h3 className='landing-text right-justify'>- {title}</h3>\n        <h3 className='landing-text right-justify'>- {date}</h3>\n      </div>\n    </div>\n  );\n}\n\nLanding.propTypes = {\n  text: PropTypes.string,\n  title: PropTypes.string,\n  date: PropTypes.string\n}\n\nLanding.defaultProps = {\n  text: 'DEFAULT TEXT',\n  title: 'DEFAULT TITLE',\n  date: '00-00-0000'\n}\n\nexport default Landing;","import React from 'react';\n\nconst Loading = () => {\n  return(\n    <div className='no-cards-container'>\n      <img className='star-wars-images' src={require('../../images/darth-vader.png')} alt='darth vader' />\n      <h3 className='no-cards-text'>Loading data... I find your lack of faith disturbing.</h3>\n      <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    </div>\n  )\n}\n\nexport default Loading;","const fetchData = async (url) => {\n  try {\n    const response = await fetch(url)\n    return response.json();\n  } catch (error) {\n    throw Error(`Error fetching data: ${error.message}`);\n  }\n}\n\nexport default {\n  fetchData\n}\n","import React, { Component } from 'react';\nimport '../../normalize.css';\nimport './App.css';\nimport '../../main.scss';\nimport ControlForm from '../ControlForm/ControlForm';\nimport CardContainer from '../CardContainer/CardContainer';\nimport Landing from '../Landing/Landing';\nimport Loading from '../Loading/Loading';\nimport API from '../api/api';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentPage: 'loading',\n      allCards: [],\n      scrollText: {},\n      favorites: [],\n      show10: true\n    }\n  }\n\n  toggleShownCards = () => {\n    this.setState({\n      show10: !this.state.show10\n    });\n  }\n\n  getData = async (item) => {\n    if (await this.state.allCards.findIndex(card => card.type === item) === -1) {\n      this.setState({\n        currentPage: 'loading'\n      });\n      const results = await API.fetchData(`https://swapi.co/api/${item}`);\n      const allData = await this.getNextPageData(results);\n      let finalData;\n      switch (item) {\n        case 'people':\n          finalData = await this.getPeopleData(allData);\n          break;\n        case 'planets':\n          finalData = await this.getPlanetData(allData);\n          break;\n        case 'vehicles':\n          finalData = await this.getVehicleData(allData);\n          break;\n        default:\n          console.log('Error: case is not valid');\n      }\n      this.setState({\n        allCards: [...this.state.allCards, ...finalData]\n      });\n    } \n    this.setState({\n      currentPage: item,\n      show10: true\n    });\n  }\n\n  getNextPageData = async (prevResults) => {\n    let allResults = prevResults.results;\n    do {\n      const results = await API.fetchData(prevResults.next);\n      allResults = await allResults.concat(results.results);\n      prevResults = results;\n    } while (prevResults.next);\n    return allResults\n  }\n\n  getPeopleData = async (data) => {\n    const unresolvedPromises = data.map(async person => {\n      const homeworld = await this.getHomeworld(person.homeworld);\n      const species = typeof person.species === 'string' ? await this.getSpecies(person.species) : 'unknown';\n      return {\n        id: person.url,\n        type: 'people',\n        name: person.name,\n        homeworld: homeworld[0],\n        population: homeworld[1],\n        species\n      }\n    });\n    return await Promise.all(unresolvedPromises);\n  }\n\n  getPlanetData = async (data) => {\n    const unresolvedPromises = data.map(async planet => {\n      const residents = planet.residents.length > 0 ? await this.getResidents(planet.residents) : 'none';\n      return {\n        id: planet.url,\n        type: 'planets',\n        name: planet.name,\n        terrain: planet.terrain,\n        climate: planet.climate,\n        residents \n      }\n    });\n    return await Promise.all(unresolvedPromises);\n  }\n\n  getVehicleData = async (data) => {\n    const unresolvedPromises = data.map(async vehicle => {\n      return {\n        id: vehicle.url,\n        type: 'vehicles',\n        name: vehicle.name,\n        model: vehicle.model,\n        vehicle_class: vehicle.vehicle_class,\n        passengers: vehicle.passengers\n      }\n    });\n    return await Promise.all(unresolvedPromises);\n  }\n\n  getHomeworld = async (url) => {\n    const result = await API.fetchData(url);\n    return [result.name, result.population]\n  }\n\n  getSpecies = async (url) => {\n    const result = await API.fetchData(url);\n    return result.name\n  }\n\n  getResidents = async (urls) => {\n    const unresolvedPromises = urls.map(async url => {\n      const result = await API.fetchData(url);\n      return result.name\n    });\n    return await Promise.all(unresolvedPromises);\n  }\n\n  toggleFavorite = (id) => {\n    const { favorites } = this.state;\n    let newFavorites;\n    if (favorites.includes(id)) {\n      newFavorites = favorites.filter(favorite => favorite !== id);\n    } else {\n      newFavorites = [ ...favorites, id ];\n    }\n    localStorage.setItem('favorites', JSON.stringify(newFavorites));\n    this.setState({\n      favorites: newFavorites\n    });\n  }\n\n  showFavorites = async () => {\n    if (this.state.favorites.length > 0) {\n      await this.getData('people');\n      await this.getData('planets');\n      await this.getData('vehicles');\n    }\n    await this.setState({\n      currentPage: 'favorites'\n    });\n  }\n\n  componentDidMount = async () => {\n    if (localStorage.hasOwnProperty('favorites')) {\n      const favorites = JSON.parse(localStorage.getItem('favorites'));\n      this.setState({\n        favorites\n      });\n    }\n\n    let filmId = Math.floor(Math.random() * 7)+1;\n    try {\n      const result = await API.fetchData(`https://swapi.co/api/films/${filmId}`);\n      const { opening_crawl, title, release_date } = result;\n      await this.setState({\n        scrollText: { \n          text: opening_crawl,\n          title: title,\n          date: release_date\n        },\n        currentPage: 'landing'\n      });\n    } catch(error) {\n      console.log(error)\n    }\n  }\n\n  render() {\n    const { scrollText, currentPage, favorites, allCards, show10 } = this.state;\n    let contentToDisplay;\n    if (currentPage === 'landing') {\n      contentToDisplay = <Landing {...scrollText} />;\n    } else if (currentPage === 'loading') {\n      contentToDisplay = <Loading />\n    } else {\n      let cardsToDisplay = currentPage === 'favorites' ? allCards.filter(card => favorites.includes(card.id)) : allCards.filter(card => card.type === currentPage);\n      contentToDisplay = \n      <div>\n        <CardContainer \n          cards={cardsToDisplay} \n          favorites={favorites}\n          toggleFavorite={this.toggleFavorite}\n          currentPage={currentPage}\n          show10={show10}\n          toggleShownCards={this.toggleShownCards}\n        />\n      </div>\n    }\n    return (\n      <div>\n        <h1>SWAPI BOX</h1>\n        <h2>a star wars api app - select a category</h2>\n        <ControlForm \n          activeButton={currentPage} \n          getData={this.getData} \n          favoritesCount={favorites.length}\n          showFavorites={this.showFavorites}\n        />\n        {contentToDisplay}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}